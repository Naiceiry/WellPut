"""empty message

Revision ID: 92e1c58a9d9e
Revises: 861b0c17672e
Create Date: 2021-08-05 17:17:14.931060

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '92e1c58a9d9e'
down_revision = '861b0c17672e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('room',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('city', sa.String(length=120), nullable=True),
    sa.Column('street', sa.String(length=80), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('floor', sa.Integer(), nullable=True),
    sa.Column('door', sa.String(length=80), nullable=True),
    sa.Column('bell', sa.String(length=80), nullable=True),
    sa.Column('neighbourhood', sa.String(length=120), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('deposit', sa.Integer(), nullable=True),
    sa.Column('inclddedService', sa.String(length=120), nullable=True),
    sa.Column('condition', sa.String(length=120), nullable=True),
    sa.Column('title', sa.String(length=120), nullable=True),
    sa.Column('descripction', sa.String(length=280), nullable=True),
    sa.Column('bed', sa.String(length=80), nullable=True),
    sa.Column('room', sa.String(length=80), nullable=True),
    sa.Column('feature', sa.String(length=80), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assesment__room',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('room_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assesment__user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('photo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('photo__room',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('room_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('Photo_Room')
    op.drop_table('Assesment_User')
    op.drop_table('Assesment_Room')
    op.drop_table('Room')
    op.drop_table('Photo')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Photo',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Photo_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='Photo_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='Photo_pkey')
    )
    op.create_table('Room',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Room_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('city', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('street', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('floor', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('door', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('bell', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('neighbourhood', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('deposit', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('inclddedService', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('Condition', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('descripction', sa.VARCHAR(length=280), autoincrement=False, nullable=True),
    sa.Column('bed', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('Room', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('Feature', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='Room_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Assesment_Room',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Assesment_Room_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('room_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['Room.id'], name='Assesment_Room_room_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='Assesment_Room_pkey')
    )
    op.create_table('Assesment_User',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Assesment_User_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='Assesment_User_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='Assesment_User_pkey')
    )
    op.create_table('Photo_Room',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Photo_Room_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('room_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['Room.id'], name='Photo_Room_room_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='Photo_Room_pkey')
    )
    op.drop_table('photo__room')
    op.drop_table('photo')
    op.drop_table('assesment__user')
    op.drop_table('assesment__room')
    op.drop_table('room')
    # ### end Alembic commands ###
